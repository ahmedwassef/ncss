{#
/**
 * @file
 * NCSS Professional theme implementation for status messages.
 *
 * Enhanced modern design with icons, animations, and improved UX.
 *
 * Available variables:
 * - message_list: List of messages to be displayed, grouped by type.
 * - status_headings: List of all status types.
 * - display: (optional) May have a value of 'status' or 'error' when only
 *   displaying messages of that specific type.
 * - attributes: HTML attributes for the element, including:
 *   - class: HTML classes.
 */
#}
{{ attach_library('ncss/alerts') }}

<div data-drupal-messages class="messages-container">
  {% for type, messages in message_list %}
    {%
      set classes = [
        'message-alert',
        'message-alert--' ~ type,
        'message-alert--dismissible',
      ]
    %}
    {%
      set role = {
        'status': 'status',
        'error': 'alert',
        'warning': 'alert',
        'info': 'status',
      }
    %}
    {%
      set icons = {
        'status': '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/></svg>',
        'warning': '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16"><path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/></svg>',
        'error': '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16"><path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8 4a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 4zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z"/></svg>',
        'info': '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" viewBox="0 0 16 16"><path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"/></svg>',
      }
    %}

    <div aria-label="{{ status_headings[type] }}"
         {{ attributes|without('role', 'aria-label').addClass(classes).setAttribute('role', role[type]) }}
         data-message-type="{{ type }}">

      {# Icon Container #}
      <div class="message-alert__icon">
        <div class="message-alert__icon-wrapper">
          {{ icons[type]|raw }}
        </div>
      </div>

      {# Content Container #}
      <div class="message-alert__content">
        {# Title #}
        {% if status_headings[type] %}
          <div class="message-alert__title">
            {{ status_headings[type] }}
          </div>
        {% endif %}

        {# Messages #}
        <div class="message-alert__messages">
          {% for message in messages %}
            <div class="message-alert__message">
              {{ message }}
            </div>
            {% if not loop.last %}
              <div class="message-alert__divider"></div>
            {% endif %}
          {% endfor %}
        </div>
      </div>

      {# Close Button #}
      <button type="button"
              class="message-alert__close"
              data-dismiss="message-alert"
              aria-label="{{ 'Close'|t }}"
              title="{{ 'Close message'|t }}">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16">
          <path d="M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z"/>
        </svg>
      </button>

      {# Animated Background Pattern #}
      <div class="message-alert__pattern" aria-hidden="true"></div>

    </div>
  {% endfor %}
</div>

<script>
(function() {
  'use strict';

  document.addEventListener('DOMContentLoaded', function() {
    // Handle message dismissal with animation
    const closeButtons = document.querySelectorAll('[data-dismiss="message-alert"]');

    closeButtons.forEach(function(button) {
      button.addEventListener('click', function(e) {
        e.preventDefault();
        const messageAlert = this.closest('.message-alert');

        if (messageAlert) {
          // Add closing animation
          messageAlert.style.animation = 'messageSlideOut 0.4s ease-out forwards';

          // Remove from DOM after animation
          setTimeout(function() {
            messageAlert.style.height = messageAlert.offsetHeight + 'px';
            messageAlert.style.transition = 'height 0.3s ease-out, margin 0.3s ease-out, opacity 0.3s ease-out';
            messageAlert.style.overflow = 'hidden';

            requestAnimationFrame(function() {
              messageAlert.style.height = '0';
              messageAlert.style.marginTop = '0';
              messageAlert.style.marginBottom = '0';
              messageAlert.style.opacity = '0';
            });

            setTimeout(function() {
              messageAlert.remove();

              // Remove container if no messages left
              const container = document.querySelector('[data-drupal-messages]');
              if (container && !container.querySelector('.message-alert')) {
                container.remove();
              }
            }, 300);
          }, 400);
        }
      });
    });

    // Auto-dismiss success messages after 8 seconds
    const statusMessages = document.querySelectorAll('.message-alert--status');
    statusMessages.forEach(function(message) {
      setTimeout(function() {
        const closeBtn = message.querySelector('.message-alert__close');
        if (closeBtn) {
          closeBtn.click();
        }
      }, 8000);
    });
  });
})();
</script>
