{% include '@ncss/layout/header.html.twig' %}
{% if lang=='ar' %}
  {{ attach_library('ncss/rightCSS') }}
{% endif %}

<div class="auth-layout container-fluid d-flex align-items-center justify-content-center min-vh-100 position-relative" style="background: linear-gradient(135deg, #f8fafc 0%, #e9f5ee 100%);">
  <a class="back-btn position-absolute" style="top: 30px; left: 30px;" href="/user/login">
    <img src="/themes/ncss/frontend/img/arrow-left-02.svg" class="rtl-rotate" alt="{{ "Left arrow"|t }}">
  </a>

  <div class="forgot-password-container">

    {# Success Message Container (Hidden by default) #}
    <div id="success-message-container" class="card border-0 shadow-lg success-card" style="max-width: 540px; width: 100%; border-radius: 1.5rem; overflow: hidden; display: none;">
      <div class="card-body p-5 text-center">

        {# Success Icon #}
        <div class="success-icon-wrapper mx-auto mb-4" style="width: 100px; height: 100px; background: linear-gradient(135deg, #198754 0%, #146c43 100%); border-radius: 50%; display: flex; align-items: center; justify-content: center; box-shadow: 0 10px 40px rgba(25, 135, 84, 0.4);">
          <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="white" viewBox="0 0 16 16" class="success-checkmark">
            <path d="M12.736 3.97a.733.733 0 0 1 1.047 0c.286.289.29.756.01 1.05L7.88 12.01a.733.733 0 0 1-1.065.02L3.217 8.384a.757.757 0 0 1 0-1.06.733.733 0 0 1 1.047 0l3.052 3.093 5.4-6.425a.247.247 0 0 1 .02-.022Z"/>
          </svg>
        </div>

        <h2 class="title mb-3" style="font-size: 1.75rem; font-weight: 700; color: #198754;">
          {{ "Email Sent Successfully!"|t }}
        </h2>

        <p class="description text-muted px-3 mb-4" style="font-size: 1rem; line-height: 1.6;">
          {{ "We've sent password reset instructions to"|t }}
        </p>

        <div class="alert alert-success d-inline-flex align-items-center gap-2 mb-4" style="background: rgba(25, 135, 84, 0.1); border: 2px solid rgba(25, 135, 84, 0.3); border-radius: 0.75rem; padding: 1rem 1.5rem;">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16" style="color: #198754;">
            <path d="M0 4a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V4Zm2-1a1 1 0 0 0-1 1v.217l7 4.2 7-4.2V4a1 1 0 0 0-1-1H2Zm13 2.383-4.708 2.825L15 11.105V5.383Zm-.034 6.876-5.64-3.471L8 9.583l-1.326-.795-5.64 3.47A1 1 0 0 0 2 13h12a1 1 0 0 0 .966-.741ZM1 11.105l4.708-2.897L1 5.383v5.722Z"/>
          </svg>
          <strong id="sent-email-display" style="color: #198754; font-size: 1.1rem;">email@example.com</strong>
        </div>

        <div class="info-box mb-4 p-3" style="background: #f8f9fa; border-radius: 0.75rem; border-left: 4px solid #0d6efd;">
          <p class="small text-muted mb-2 text-start">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="me-2" viewBox="0 0 16 16" style="vertical-align: text-bottom;">
              <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
              <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
            </svg>
            <strong>{{ "Next Steps:"|t }}</strong>
          </p>
          <ul class="text-start small text-muted ps-4 mb-0" style="line-height: 1.8;">
            <li>{{ "Check your email inbox"|t }}</li>
            <li>{{ "Click the reset link in the email"|t }}</li>
            <li>{{ "Create your new password"|t }}</li>
            <li>{{ "Link expires in 24 hours"|t }}</li>
          </ul>
        </div>

        <div class="alert alert-info d-flex align-items-center gap-2 mb-3" style="background: rgba(13, 110, 253, 0.1); border: 2px solid rgba(13, 110, 253, 0.3); border-radius: 0.75rem;">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" viewBox="0 0 16 16" style="color: #0d6efd;">
            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z"/>
          </svg>
          <span style="color: #084298; flex: 1;">
            {{ "Redirecting to login page in"|t }} <strong id="redirect-countdown">5</strong> {{ "seconds"|t }}...
          </span>
        </div>

        <div class="d-grid gap-2 mb-3">
          <a href="/user/login" class="btn btn-primary btn-lg" style="border-radius: 0.75rem; padding: 0.875rem; font-weight: 600;">
            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="me-2" viewBox="0 0 16 16" style="vertical-align: text-bottom;">
              <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z"/>
            </svg>
            {{ "Go to Login Now"|t }}
          </a>
        </div>

        <p class="small text-muted mb-0">
          {{ "Didn't receive the email?"|t }}
          <a href="#" id="resend-email-link" class="text-decoration-none fw-semibold" style="color: #0d6efd;">
            {{ "Resend"|t }}
          </a>
        </p>
      </div>
    </div>

    {# Main Form Container #}
    <div id="form-container" class="card border-0 shadow-lg" style="max-width: 540px; width: 100%; border-radius: 1.5rem; overflow: hidden;">
      <div class="card-body p-5">

        {# Icon Section #}
        <div class="text-center mb-4">
          <div class="forgot-password-icon mx-auto mb-4"  >
            <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="white" viewBox="0 0 16 16">
              <path d="M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z"/>
            </svg>
          </div>
          <h1 class="title mb-3" style="font-size: 2rem; font-weight: 700; color: #1a1a1a;">
            {{ "Forgot Password?"|t }}
          </h1>
          <p class="description text-muted px-3" style="font-size: 1rem; line-height: 1.6;">
            {{ "No worries! Enter your email address below and we'll send you instructions to reset your password."|t }}
          </p>
        </div>

        {# Form Content #}
        <div class="forgot-password-form">
          {{ page.content }}
        </div>

        {# Divider #}
        <div class="my-4" style="border-top: 1px solid #e9ecef;"></div>

        {# Back to Login Link #}
        <div class="text-center">
          <p class="mb-0" style="color: #6c757d; font-size: 0.95rem;">
            {{ "Remember your password?"|t }}
            <a href="/user/login" class="fw-semibold text-decoration-none" style=" transition: all 0.3s ease;">
              {{ "Back to Login"|t }}
            </a>
          </p>
        </div>

        {# Help Section #}
        <div class="text-center mt-4 pt-3" style="border-top: 1px dashed;">
          <p class="small text-muted mb-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-info-circle me-1" viewBox="0 0 16 16" style="vertical-align: text-bottom;">
              <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
              <path d="m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z"/>
            </svg>
            {{ "Having trouble?"|t }}
            <a href="/contact" class="text-decoration-none"  >{{ "Contact Support"|t }}</a>
          </p>
        </div>

      </div>
    </div>

    {# Security Badge #}
    <div class="text-center mt-4">
      <small class="text-muted d-flex align-items-center justify-content-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
          <path d="M5.338 1.59a61.44 61.44 0 0 0-2.837.856.481.481 0 0 0-.328.39c-.554 4.157.726 7.19 2.253 9.188a10.725 10.725 0 0 0 2.287 2.233c.346.244.652.42.893.533.12.057.218.095.293.118a.55.55 0 0 0 .101.025.615.615 0 0 0 .1-.025c.076-.023.174-.061.294-.118.24-.113.547-.29.893-.533a10.726 10.726 0 0 0 2.287-2.233c1.527-1.997 2.807-5.031 2.253-9.188a.48.48 0 0 0-.328-.39c-.651-.213-1.75-.56-2.837-.855C9.552 1.29 8.531 1.067 8 1.067c-.53 0-1.552.223-2.662.524zM5.072.56C6.157.265 7.31 0 8 0s1.843.265 2.928.56c1.11.3 2.229.655 2.887.87a1.54 1.54 0 0 1 1.044 1.262c.596 4.477-.787 7.795-2.465 9.99a11.775 11.775 0 0 1-2.517 2.453 7.159 7.159 0 0 1-1.048.625c-.28.132-.581.24-.829.24s-.548-.108-.829-.24a7.158 7.158 0 0 1-1.048-.625 11.777 11.777 0 0 1-2.517-2.453C1.928 10.487.545 7.169 1.141 2.692A1.54 1.54 0 0 1 2.185 1.43 62.456 62.456 0 0 1 5.072.56z"/>
        </svg>
        {{ "Your information is secure and protected"|t }}
      </small>
    </div>
  </div>
</div>

<script>
(function() {
  'use strict';

  // Wait for DOM to be ready
  document.addEventListener('DOMContentLoaded', function() {
    const formContainer = document.getElementById('form-container');
    const successContainer = document.getElementById('success-message-container');
    const sentEmailDisplay = document.getElementById('sent-email-display');
    const form = document.querySelector('.forgot-password-form form');
    const emailInput = document.querySelector('.forgot-password-form input[type="email"], .forgot-password-form input[name*="mail"], .forgot-password-form input[name="name"]');
    const submitButton = form ? form.querySelector('input[type="submit"], button[type="submit"]') : null;

    // Check if success message already exists (Drupal message)
    const drupalMessages = document.querySelectorAll('.messages-container .messages--status, .messages-container .messages.status, [data-drupal-messages] .messages--status');
    if (drupalMessages.length > 0) {
      // Extract email/username from Drupal message
      let email = 'your email address';

      // Try to extract from message placeholder
      const placeholderElement = drupalMessages[0].querySelector('em.placeholder');
      if (placeholderElement) {
        email = placeholderElement.textContent.trim();
      }

      // Fallback to form input if available
      if (email === 'your email address' && emailInput && emailInput.value) {
        email = emailInput.value;
      }

      // Check sessionStorage
      const storedEmail = sessionStorage.getItem('password_reset_email');
      if (storedEmail) {
        email = storedEmail;
      }

      // Show success message
      showSuccessMessage(email);

      // Log to console
      console.log('═══════════════════════════════════════');
      console.log('✅ PASSWORD RESET EMAIL SENT');
      console.log('═══════════════════════════════════════');
      console.log('📧 Account:', email);
      console.log('⏰ Time:', new Date().toLocaleString());
      console.log('🌐 Language:', document.documentElement.lang || 'en');
      console.log('📱 Device:', /Mobile|Android|iPhone/i.test(navigator.userAgent) ? 'Mobile' : 'Desktop');
      console.log('═══════════════════════════════════════');

      return;
    }

    // If no form found, exit
    if (!form || !emailInput) {
      return;
    }

    // Handle form submission
    form.addEventListener('submit', function(e) {
      const email = emailInput.value.trim();

      if (!email) {
        return; // Let default validation handle it
      }

      // Log the email
      console.log('═══════════════════════════════════════');
      console.log('🔐 PASSWORD RESET REQUEST');
      console.log('═══════════════════════════════════════');
      console.log('📧 Email:', email);
      console.log('⏰ Timestamp:', new Date().toISOString());
      console.log('🌐 User Agent:', navigator.userAgent);
      console.log('🔗 Page URL:', window.location.href);
      console.log('═══════════════════════════════════════');

      // Add loading state to button
      if (submitButton) {
        submitButton.classList.add('loading');
        submitButton.disabled = true;
      }

      // Store email in sessionStorage for later use
      sessionStorage.setItem('password_reset_email', email);

      // Set a flag that we're on the password reset page
      sessionStorage.setItem('password_reset_page', 'true');
    });

    // Clear the flag when leaving the page
    window.addEventListener('beforeunload', function() {
      // Only keep the email if we're still on password-related pages
      if (!window.location.href.includes('/user/password') &&
          !window.location.href.includes('/user/reset')) {
        sessionStorage.removeItem('password_reset_email');
        sessionStorage.removeItem('password_reset_page');
      }
    });

    // Check if we just submitted and came back with success
    const urlParams = new URLSearchParams(window.location.search);
    const storedEmail = sessionStorage.getItem('password_reset_email');

    if (storedEmail && drupalMessages.length > 0) {
      showSuccessMessage(storedEmail);
      sessionStorage.removeItem('password_reset_email');
    }

    // Auto-redirect timer
    let redirectTimer = null;
    let redirectSeconds = 5;

    function startRedirectCountdown() {
      const countdownElement = document.getElementById('redirect-countdown');
      if (!countdownElement) return;

      redirectTimer = setInterval(function() {
        redirectSeconds--;
        countdownElement.textContent = redirectSeconds;

        if (redirectSeconds <= 0) {
          clearInterval(redirectTimer);
          // Redirect to login page
          window.location.href = '/user/login';
        }
      }, 1000);
    }

    function stopRedirectCountdown() {
      if (redirectTimer) {
        clearInterval(redirectTimer);
        redirectTimer = null;
      }
      redirectSeconds = 5;
    }

    // Resend email functionality
    const resendLink = document.getElementById('resend-email-link');
    if (resendLink) {
      resendLink.addEventListener('click', function(e) {
        e.preventDefault();

        // Stop redirect countdown
        stopRedirectCountdown();

        // Hide success, show form
        successContainer.style.display = 'none';
        formContainer.style.display = 'block';

        // Animate
        formContainer.style.animation = 'slideUp 0.6s ease-out';

        // Scroll to top
        window.scrollTo({ top: 0, behavior: 'smooth' });

        // Focus on email input
        if (emailInput) {
          setTimeout(() => emailInput.focus(), 300);
        }
      });
    }

    function showSuccessMessage(email) {
      // Hide form
      if (formContainer) {
        formContainer.style.display = 'none';
      }

      // Update email in success message
      if (sentEmailDisplay) {
        sentEmailDisplay.textContent = email;
      }

      // Show success message
      if (successContainer) {
        successContainer.style.display = 'block';
        successContainer.style.animation = 'slideUp 0.6s ease-out, fadeIn 0.6s ease-out';
      }

      // Hide any Drupal messages with fade out
      const allMessages = document.querySelectorAll('[data-drupal-messages], .messages__wrapper, .messages');
      allMessages.forEach(msg => {
        msg.style.transition = 'opacity 0.3s ease-out';
        msg.style.opacity = '0';
        setTimeout(() => {
          msg.style.display = 'none';
        }, 300);
      });

      // Add class to container
      const container = document.querySelector('.forgot-password-container');
      if (container) {
        container.classList.add('show-success');
      }

      // Scroll to top
      window.scrollTo({ top: 0, behavior: 'smooth' });

      // Trigger confetti effect (optional visual enhancement)
      createConfetti();

      // Start redirect countdown
      startRedirectCountdown();

      // Remove stored email after showing
      setTimeout(() => {
        sessionStorage.removeItem('password_reset_email');
      }, 1000);
    }

    function createConfetti() {
      const colors = ['#198754', '#0d6efd', '#20c997', '#0dcaf0'];
      const confettiCount = 50;

      for (let i = 0; i < confettiCount; i++) {
        setTimeout(() => {
          const confetti = document.createElement('div');
          confetti.style.position = 'fixed';
          confetti.style.width = '10px';
          confetti.style.height = '10px';
          confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
          confetti.style.left = Math.random() * window.innerWidth + 'px';
          confetti.style.top = '-10px';
          confetti.style.opacity = '1';
          confetti.style.borderRadius = '50%';
          confetti.style.pointerEvents = 'none';
          confetti.style.zIndex = '9999';

          document.body.appendChild(confetti);

          const animation = confetti.animate([
            {
              transform: 'translateY(0) rotate(0deg)',
              opacity: 1
            },
            {
              transform: `translateY(${window.innerHeight + 10}px) rotate(${Math.random() * 360}deg)`,
              opacity: 0
            }
          ], {
            duration: 3000 + Math.random() * 2000,
            easing: 'cubic-bezier(0.25, 0.46, 0.45, 0.94)'
          });

          animation.onfinish = () => confetti.remove();
        }, i * 30);
      }
    }
  });
})();
</script>

{% include '@ncss/layout/footer.html.twig' %}
